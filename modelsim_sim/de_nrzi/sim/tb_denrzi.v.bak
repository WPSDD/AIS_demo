`timescale 1ns/100ps

module tb_nrzi;
	reg 	tb_clk, tb_rst_n, data_demo, data_demo_dly;
	reg	[0:0] mem1x256 [255:0];
	wire 	data_denrzi;
	
	initial 
	begin
		tb_clk <= 1'b0;
		tb_rst_n <= 1'b0;
		tb_a <= 0'b0;
		#200
		tb_rst_n <= 1'b1;
	end
	
	always #10 tb_clk <= ~tb_clk;
	
	initial	begin
		data_in = 0;
		#150
		read_data();
	end
	
	initial	begin
		$readmemb("./data_pad.txt",mem1x186);
	end
	
	nrzi nrzi_inst(
			.sclk					(tb_clk),
			.rst_n				(tb_rst_n),
			.data_demo			(data_demo),
			.data_denrzi		(data_denrzi)
	);
	
	task read_data();
	integer i;
	begin
			handle = $fopen("./data_denrzi.txt");
			for(i=0; i<256; i=i+1)
			begin
				@(posedge sclk)
				if(i == 0)
					begin
						data_demo <= mem1x256[i[7:0]];
						data_demo_dly <= 1'b1;
					end
				else
					begin
						data_demo <= mem1x256[i[7:0]];
						data_demo_dly <= mem1x256[i[7:0]-1];
					end
			end
	end
	endtask
endmodule	
